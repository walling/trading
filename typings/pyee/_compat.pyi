"""
This type stub file was generated by pyright.
"""

from pyee._base import BaseEventEmitter

class CompatEventEmitter(BaseEventEmitter):
    """An EventEmitter exposed for compatibility with prior versions of
    pyee. This functionality is deprecated; you should instead use either
    ``AsyncIOEventEmitter``, ``TwistedEventEmitter``, ``ExecutorEventEmitter``,
    ``TrioEventEmitter`` or ``BaseEventEmitter``.

    This class is similar to the ``AsyncIOEventEmitter`` class, but also allows
    for overriding the scheduler function (``ensure_future`` by default as in
    ``ASyncIOEventEmitter``) and does duck typing checks to handle Deferreds.
    In other words, by setting ``scheduler`` to
    ``twisted.internet.defer.ensureDeferred`` this will support twisted use
    cases for coroutines.

    When calling synchronous handlers, raised exceptions are ignored - as with
    the BaseEventEmitter, you must capture and handle your own exceptions.
    However, for coroutine functions, exceptions are handled by emitting them
    on the ``error`` event.  Note that when using with twisted, the ``error``
    event will emit Failures, not Exceptions.

    This class will also successfully import in python 2, but without coroutine
    support.
    """
    def __init__(self, scheduler=..., loop=...) -> None:
        ...
    


